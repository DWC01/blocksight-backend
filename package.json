{
	"name": "nest-starter-template",
	"version": "1.0.01",
	"description": "",
	"author": "",
	"private": true,
	"license": "UNLICENSED",
	"scripts": {
		"prebuild": "rimraf dist",
		"postinstall": "yarn prisma generate",
		"build": "nest build",
		"format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
		"start": "nest start",
		"start:dev": "export NODE_ENV=development && nest start --watch",
		"start:debug": "export NODE_ENV=development && nest start --debug --watch",
		"start:prod": "export NODE_ENV=production && node dist/main",
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
		"test": "export NODE_ENV=test && dotenv -e .env.test -- jest",
		"test:watch": "dotenv -e .env.test && export NODE_ENV=test && jest --watch",
		"test:cov": "jest --coverage",
		"test:unit": "jest src/transactions/utils/parse-transaction.spec.ts",
		"pretest:e2e": "dotenv -e .env.test -- prisma migrate reset --force",
		"test:e2e": "export NODE_ENV=test && jest --config ./test/helpers/config/jest-e2e.json",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"docker:bash": "docker exec -it node bash",
		"prisma:studio": "yarn prisma studio",
		"prisma:generate": "yarn prisma generate --watch",
		"prisma:migrate": "dotenv -e .env.development -- yarn prisma migrate dev --name",
		"prisma:reset:dev": "dotenv -e .env.development -- yarn prisma migrate reset --force",
		"prisma:seed:dev": "dotenv -e .env.development yarn prisma db seed",
		"mk:start": "minikube start",
		"mk:tunnel": "minikube tunnel",
		"deploy:dev": "helm package . && helm install blocksight-development blocksight-chart-1.0.0.tgz",
		"deploy:delete": "helm uninstall blocksight-development",
		"install:psql:dev": "helm install postgresql-development bitnami/postgresql --set global.postgresql.auth.username=node_api --set global.postgresql.auth.password=node_api_password --set global.postgresql.auth.database=node_api",
		"install:blocksight:dev": "helm package . && helm install blocksight-chart-1.0.0.tgz"
	},
	"dependencies": {
		"@apollo/gateway": "^2.0.2",
		"@nestjs/apollo": "^10.0.11",
		"@nestjs/cli": "^8.2.5",
		"@nestjs/common": "^8.4.4",
		"@nestjs/config": "^2.0.0",
		"@nestjs/core": "^8.4.4",
		"@nestjs/graphql": "^10.0.11",
		"@nestjs/jwt": "^8.0.0",
		"@nestjs/mapped-types": "^1.0.1",
		"@nestjs/platform-express": "^8.4.4",
		"@nestjs/schematics": "^8.0.11",
		"@nestjs/testing": "^8.4.4",
		"@prisma/client": "^3.14.0",
		"apollo-server-core": "^3.7.0",
		"apollo-server-errors": "^3.3.1",
		"apollo-server-express": "^3.7.0",
		"axios": "^0.27.2",
		"bcrypt": "^5.0.1",
		"bignumber.js": "^9.0.2",
		"class-transformer": "^0.5.1",
		"class-validator": "^0.13.2",
		"coinbase-pro-node": "^4.0.0",
		"dotenv": "^16.0.0",
		"ethers": "^5.6.5",
		"express-session": "^1.17.3",
		"graphql": "^16.4.0",
		"graphql-iso-date": "^3.6.1",
		"graphql-tools": "^8.2.8",
		"nestjs-prisma": "^0.15.1",
		"numeral": "^2.0.6",
		"reflect-metadata": "^0.1.13",
		"rimraf": "^3.0.2",
		"rxjs": "^7.5.5",
		"rxjs-compat": "^6.6.7",
		"ts-morph": "^14.0.0"
	},
	"devDependencies": {
		"@faker-js/faker": "^6.3.1",
		"@types/bcrypt": "^5.0.0",
		"@types/cookie-parser": "^1.4.3",
		"@types/express": "4.17.13",
		"@types/express-session": "^1.17.4",
		"@types/jest": "^27.5.0",
		"@types/node": "^17.0.31",
		"@types/supertest": "^2.0.12",
		"@typescript-eslint/eslint-plugin": "^5.22.0",
		"@typescript-eslint/parser": "^5.22.0",
		"eslint": "^8.15.0",
		"eslint-config-prettier": "8.5.0",
		"eslint-plugin-prettier": "^4.0.0",
		"graphql-type-json": "^0.3.2",
		"jest": "^28.1.0",
		"prettier": "^2.6.2",
		"prisma": "^3.14.0",
		"supertest": "^6.2.3",
		"ts-jest": "^28.0.1",
		"ts-loader": "^9.3.0",
		"ts-node": "^10.7.0",
		"tsconfig-paths": "^4.0.0",
		"typescript": "^4.6.4"
	},
	"prisma": {
		"seed": "ts-node prisma/seed.ts"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": "src",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "../coverage",
		"testEnvironment": "node"
	}
}
