# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type LogOutResponse {
  userId: Float!
  isAuthenticated: Boolean!
}

type User {
  id: Float
  email: String
  primaryWalletAddress: String
  role: String
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SessionResponse {
  user: User!
  isAuthenticated: Boolean!
}

type Query {
  findOneUser(findOneUserInput: FindOneUserInput!): User
  findAllUsers(findAllUsersInput: FindAllUsersInput!): [User!]!
  currentUser: SessionResponse!
}

input FindOneUserInput {
  email: String
  primaryWalletAddress: String
  id: Float
}

input FindAllUsersInput {
  skip: Float
  take: Float
  cursor: Cursor
  where: UserWhereInput
  orderBy: UserOrderByInput
}

input Cursor {
  id: Float
  email: String
  primaryWalletAddress: String
}

input UserWhereInput {
  id: Float
  email: String
  primaryWalletAddress: String
  role: String
  createdAt: DateTime
  updatedAt: DateTime
  AND: [UserInput!]
  OR: [UserInput!]
  NOT: [UserInput!]
}

input UserInput {
  id: Float
  email: String
  primaryWalletAddress: String
  role: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserOrderByInput {
  id: String
  email: String
  primaryWalletAddress: String
  role: String
  createdAt: String
  updatedAt: String
}

type Mutation {
  updateUser(id: Int!, updateUserInput: UpdateUserInput!): User!
  deleteUser(id: Int!): User!
  login(sessionInput: SessionInput!): SessionResponse!
  signInMetaMask(signInMetaMaskInput: SignInMetaMaskInput!): SessionResponse!
  signUp(createUserEmailInput: CreateUserEmailInput!): SessionResponse!
  logOut(userId: Float!): LogOutResponse!
}

input UpdateUserInput {
  email: String
  primaryWalletAddress: String
}

input SessionInput {
  email: String!
  password: String!
}

input SignInMetaMaskInput {
  address: String!
  signature: String!
  message: String!
}

input CreateUserEmailInput {
  email: String!
  password: String!
  passwordConfirmation: String
}